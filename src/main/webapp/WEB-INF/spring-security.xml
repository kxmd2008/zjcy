<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
      http://www.springframework.org/schema/security 
      http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
	<!-- Spring-Security 的配置 -->
	<!-- 注意开启use-expressions.表示开启表达式. see:http://www.family168.com/tutorial/springsecurity3/html/el-access.html -->
	<http pattern="/index" security="none" />
	<http pattern="/register" security="none" />
	<http pattern="/forgotPassword" security="none" />
	<http pattern="/assets/**" security="none" />
	<http entry-point-ref="authenticationEntryPoint">
		<!-- 登录过滤器 -->
		<custom-filter before="FORM_LOGIN_FILTER" ref="loginFilter" />
		<custom-filter before="LOGOUT_FILTER" ref="logoutFilter" />
		<intercept-url pattern="/logout" access="ROLE_ANONYMOUS" />
		<intercept-url pattern="/login" access="ROLE_ANONYMOUS" />
		<intercept-url pattern="/admin/**" access="ROLE_ADMIN" />
		<intercept-url pattern="/purchase/**" access="ROLE_PURCHASE,ROLE_PM" />
		<intercept-url pattern="/supplier/**" access="ROLE_SUPPLIER" />
		<intercept-url pattern="/mgt/**" access="ROLE_ADMIN,ROLE_PURCHASE,ROLE_PM,ROLE_SUPPLIER" />

	</http>

<!-- 	<bean id="loginUrlEntryPoint" -->
<!-- 		class="org.luis.sainteclaires.base.security.RestAuthenticationEntryPoint" /> -->
	<beans:bean id="authenticationEntryPoint"  
        class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">  
        <beans:property name="loginFormUrl" value="/index" />  
    </beans:bean>  

	<!-- 指定一个自定义的authentication-manager :customUserDetailsService -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider
			user-service-ref="userLoginService">
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>

	<!-- 对密码进行MD5编码 -->
	<beans:bean id="passwordEncoder" class="org.luis.basic.security.PasswordEncode">
		<beans:constructor-arg name="algorithm" value="md5" />
	</beans:bean>

	<!-- 通过 customUserDetailsService,Spring会自动的用户的访问级别. 也可以理解成:以后我们和数据库操作就是通过customUserDetailsService来进行关联. -->
<!-- 	<beans:bean id="customUserDetailsService" -->
<!-- 		class="org.luis.sainteclaires.base.security.UserDetailServiceImpl" /> -->

	<!-- 验证前台用户 -->
	<beans:bean id="loginFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="authenticationFailureHandler" ref="failureHandler" />
		<beans:property name="authenticationSuccessHandler" ref="successHandler" />
		<beans:property name="filterProcessesUrl" value="/j_login" />
		<beans:property name="usernameParameter" value="loginName" />
		<beans:property name="passwordParameter" value="password" />
	</beans:bean>

	<beans:bean id="failureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/index?error=true" />
	</beans:bean>

	<beans:bean id="successHandler"
		class="com.zjqy.purchaseplatform.security.LoginSuccessHandler">
		<beans:property name="alwaysUseDefaultTargetUrl" value="true" />
<!-- 		<beans:property name="defaultTargetUrl" value="/supplier" /> -->
		<beans:property name="adminUrl" value="/admin" />
		<beans:property name="purchaseUrl" value="/purchase" />
		<beans:property name="supplierUrl" value="/supplier" />
	</beans:bean>

	<!-- 注销过滤器，完成前台用户注销时的定向功能 -->
	<beans:bean id="logoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<beans:constructor-arg value="/index" />
		<beans:constructor-arg>
			<beans:list>
				<beans:bean
					class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
			</beans:list>
		</beans:constructor-arg>
		<beans:property name="filterProcessesUrl" value="/logout" />
	</beans:bean>
	
	
</beans:beans>